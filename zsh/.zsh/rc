#Colors.
autoload -U colors
colors
setopt prompt_subst

setopt hist_ignore_dups

. ~/.zsh/env
. ~/.zsh/prompt
. ~/.zsh/aliases

HISTFILE=~/.zsh_history
HISTIGNORE="ls:ls *:cd:cd -:pwd;exit:date:* --help"
HISTSIZE=1000000
SAVEHIST=1000000
setopt extendedglob notify
setopt append_history
setopt inc_append_history
setopt nonomatch

bindkey -e

# initialize autocomplete here, otherwise functions won't be loaded
# also load compdef so git-completion doesn't complain about no compdef
autoload -U compinit compdef
compinit

#XmodMap
[[ -f "$HOME/.Xmodmap" ]] && eval "$(xmodmap ~/.Xmodmap)"
[[ -f "$HOME/.dircolors" ]] && ( eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)" )

#rbenv
[[ -d "$HOME/.rbenv" ]] && eval "$(rbenv init -)"

function gem() {
    $HOME/.rbenv/shims/gem $*
    if [ "$1" = "install" ] || [ "$1" = "i" ] || [ "$1" = "uninstall" ] || [ "$1" = "uni" ]
    then
        rbenv rehash
        rehash
    fi
}
#nvm
[[ -s $HOME/.nvm/nvm.sh ]] && source $HOME/.nvm/nvm.sh

#tmux
#test -f ~/.tmuxrc && . ~/.tmuxrc
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

[[ -x "`which aws_zsh_completer.sh 2>&1`" ]] && source aws_zsh_completer.sh

if [[ -x "`which brew 2>&1`" ]]; then
#z.sh
_Z_CMD=j
  if [ -f `brew --prefix`/etc/profile.d/z.sh ]; then
    . `brew --prefix`/etc/profile.d/z.sh
  fi
#golang
  if [ -f `brew --prefix go`/share/zsh/site-functions/go ]; then
    . `brew --prefix go`/share/zsh/site-functions/go
  fi
fi


function mkcd(){mkdir -p $1 && cd $1}

case ${OSTYPE} in
  darwin*)
    export DOCKER_HOST=tcp://127.0.0.1:2375
    boot2docker status
    if [ $? -ne 0 ]; then
      # VBoxManage sharedfolder add boot2docker-vm -name home -hostpath $HOME
      boot2docker up
      # boot2docker ssh "sudo modprobe vboxsf && mkdir -p $HOME && sudo mount -t vboxsf home $HOME"
      boot2docker ssh "sudo modprobe vboxsf && mkdir -p /home/ec2-user && sudo mount -t vboxsf home /home/ec2-user" 
    else
      echo "boot2docker is already running. Execute this manuallly:"
      echo 'boot2docker ssh "sudo modprobe vboxsf && mkdir -p $HOME && sudo mount -t vboxsf home $HOME"'
    fi
    ;;
  linux*)
    ;;
esac

eval "$(direnv hook zsh)"

#peco
function peco-history() {
  local tac
  if which tac > /dev/null; then
    tac="tac"
  else
    tac="tail -r"
  fi
  BUFFER=$(history -n 1 | \
    eval $tac | \
    peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-history
bindkey '^r' peco-history

function peco-cd () {
  local selected_dir=$(find $HOME/src -type d -maxdepth 5 -not -path '*/\.*' | peco)
  if [ -n "$selected_dir" ]; then
    BUFFER="pushd \"$selected_dir\""
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-cd
bindkey '^x^f' peco-cd

# for OSX
function peco-open() {
  local selected_dir=$(find $HOME/src -type d -maxdepth 5 -not -path '*/\.*' | peco)
  if [ -n "$selected_dir" ]; then
    BUFFER="open \"$selected_dir\""
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-open
bindkey '^x^o' peco-open
