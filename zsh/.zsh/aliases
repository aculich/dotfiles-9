alias browse="hub browse"

case "${OSTYPE}" in
darwin*)
  alias ls="ls -1G"
  alias ll="ls -laG"
  alias keyboard_unlink='sudo kextunload /System/Library/Extensions/AppleUSBTopCase.kext/Contents/PlugIns/AppleUSBTCKeyboard.kext/'
  alias keyboard_link='sudo kextload /System/Library/Extensions/AppleUSBTopCase.kext/Contents/PlugIns/AppleUSBTCKeyboard.kext/'
  ;;
linux*)
  alias ls='ls --color'
  alias ll='ls -la --color'
  alias keyboard_link="xinput enable 'AT Translated Set 2 keyboard' && xmodmap ~/.Xmodmap"
  alias keyboard_unlink="xinput disable 'AT Translated Set 2 keyboard' && xmodmap ~/.XmodmapHHK"
  alias open='gnome-open'
  alias anice='ionice -c2 -n7 nice -n19'
  ;;
esac

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p'
alias vi="$(which vim)"
alias v="$(which vim)"
alias t="tig"
alias grep='grep -i --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias screen='screen -U -D -RR'
alias ql='qlmanage -p "$@" >& /dev/null'
alias imgsize="mdls -name kMDItemPixelWidth -name kMDItemPixelHeight"
alias delmacfile="find . -name \".DS_Store\" -exec rm -f {} \;"
alias rsync="rsync -avz --exclude=\".svn\" --exclude=\".DS_Store\""

alias fcd='source ~/bin/fcd.sh'
alias sc='screen -U -D -RR'
alias xattr_w='xattr -w com.apple.metadata:kMDItemFinderComment'

alias E='emacsclient -t'
alias start-emacs="emacs --daemon"
alias kill-emacs="emacsclient -e '(kill-emacs)'"

alias tmux='tmux -2'
# git
alias gst='git status -s -b && git stash list'
alias gush='git push origin $1'
alias gull='git pull origin $1'
alias gfix='git commit --amend'
alias gra='git reset HEAD $1'
alias grcs='git reset --soft HEAD^'
alias gsu='cd $(git rev-parse --show-toplevel) && git submodule update && cd -'

# ruby
alias rake='noglob rake'
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1])"'
alias urldecode='python -c "import sys, urllib as ul; print ul.unquote_plus(sys.argv[1])"'

# docker
alias dl='docker ps -l -q'
#  except data container
alias drmc='docker rm  $(docker ps -a | grep -v "_config\|_data\|_run" | tail -n +2 | cut -c-12)'
alias drmi='docker rmi $(docker images -q)'

# GCP
function gcloud_login () {
  docker run -ti --name gcloud-config -e CLOUDSDK_CONFIG=/.config/gcloud google/cloud-sdk gcloud auth login
}

function gcloud_shell () {
  if [ $# -gt 0 ]; then
    docker run -ti --rm -e CLOUDSDK_CONFIG=/.config/gcloud --volumes-from gcloud-config google/cloud-sdk $argv
  else
    docker run -ti --rm -e CLOUDSDK_CONFIG=/.config/gcloud --volumes-from gcloud-config google/cloud-sdk /bin/bash
  fi
}

alias gclogin=gcloud_login
alias gcshell=gcloud_shell

# $ gcshell $CONFIG_CONTAINER gcloud config set project $PROJECT_NAME // if you could set project.

##########################################
