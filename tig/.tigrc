# View settings
set main-view = \
  date:default \
  id:yes \
  author:width=7 \
  commit-title:graph=yes,refs=yes

set blame-view = \
  date:default \
  id:yes,color \
  author:width=7 \
  line-number:yes,interval=1 text

set refs-view = \
  date:default \
  author:width=7 \
  ref:true \
  commit-title:true

set blob-view  = line-number:yes,interval=1 text
set diff-view  = line-number:yes,interval=1 text:yes,commit-title-overflow=no
set log-view   = line-number:yes,interval=1 text
set stage-view = line-number:yes,interval=1 text

set blame-options = -C -C -C
set commit-order = default
set diff-context = 3
set diff-highlight = true
set editor-line-number = yes
set focus-child = yes
set horizontal-scroll = 33%
set id-width = 7
set ignore-case = yes
set ignore-space = some
set refresh-mode = auto
set show-changes = no
set show-notes = yes
set split-view-width = 50%
set tab-size = 2

# Bind Settings
# bind generic A none
# bind generic D none
# bind generic F none
# bind generic G none
# bind generic I none
# bind generic R none
# bind generic S none
# bind generic g none
# bind generic h none
# bind generic i none
# bind generic s none

bind generic <C-b> move-page-up
bind generic <C-f> move-page-down
bind generic A !git commit --amend
bind generic c !@sh -c 'echo %(commit) | tr -d "\n" | pbcopy' # Copy rev id to clipboard
bind generic e scroll-line-down
bind generic F !git fetch --prune
bind generic G move-last-line
bind generic g move-first-line
bind generic h view-help
bind generic o enter
bind generic y scroll-line-up

bind main ! >?git reset --soft HEAD^
bind main R >?git reset --hard %(commit)
bind main p >?git pull

bind diff D :toggle diff-options --minimal  # Use minimal diff algorithm
bind diff [ :toggle diff-context -3         # Decrease context (-U arg)
bind diff ] :toggle diff-context +3         # Increase context
bind diff i view-close

bind tree v !vim %(file)                                # open file from tree

bind refs C !git checkout -b %(branch) origin/%(branch)  # Create a new branch
bind refs c !git checkout %(branch)                      # Checkout branch
bind refs D ?@git branch -D %(branch)                    # Delete local branch
bind refs n !@git branch "%(prompt Enter branch name: )" # Create a new branch

bind status C >git commit
bind status D ?@rm -rf %(file)                         # Delete untracked files
bind status P >?git push origin %(branch)
bind status s >?git stash save
bind status S >?git stash pop
bind status v >vim %(file)
